
El Modelo de Cajas
Probablemente, el concepto m√°s dif√≠cil de entender de CSS es la diagramaci√≥n y posicionamiento de los elementos de una p√°gina web. Esto pasa porque CSS no fue hecho con el prop√≥sito de visualizar documentos tan avanzados e interactivos como los que vemos en la actualidad.

css layout
Diagramaci√≥n
Volvamos a HTML y recordemos que fue construido para hacer documentos. En alg√∫n momento debes haberte preguntado ‚Äú¬øc√≥mo hago para organizar el espacio del contenido?‚Äù. Los documentos cient√≠ficos tienen diferentes maquetaciones, las p√°ginas web deber√≠an tenerlas, ¬øno crees?

Necesitamos usar cajas para eso. Una caja es un contenedor con un ancho y una altura espec√≠fica. Las cajas tienden a ser contenedores r√≠gidos que ponen orden en el mundo HTML / CSS. La etiqueta m√°s utilizada para un cuadro es <div>.

Todo el contenido del sitio web debe estar envuelto dentro de una caja (div, header, footer, etc.). Las cajas son invisibles por defecto, por lo tanto, para hacerlas visibles, debes establecer un color de fondo o un borde. La siguiente imagen muestra cu√°ntas cajas invisibles tiene un sitio web normal:

leftright

¬øDe qu√© est√° compuesta una caja?
Todas las cajas/contenedores deben tener los siguientes atributos:

Atributo	Descripci√≥n
Contenido (Content)	Se trata del contenido HTML del elemento (las palabras de un p√°rrafo, una imagen, el texto de una lista de elementos, etc.)
Relleno (Padding)	Espacio libre opcional existente entre el contenido y el borde.
Borde (Border)	L√≠nea que encierra completamente el contenido y su relleno.
Imagen de Fondo (Background image)	Imagen que se muestra detr√°s del contenido y el espacio de relleno.
Color de Fondo (Background color)	Color que se muestra detr√°s del contenido y el espacio de relleno.
Margen (Margin)	Separaci√≥n opcional existente entre la caja y el resto de cajas adyacentes.
css layout
En el siguiente ejemplo puedes ver como dividir en dos una p√°gina web para colocar un men√∫ del lado izquierdo y el contenido del lado derecho. Colocamos color rojo al DIV del men√∫, y color azul al DIV del contenido para que el ejemplo sea m√°s f√°cil de entender.


Ancho y Largo de las Cajas
Todas las cajas tienen dos atributos que definen su tama√±o: width and height. En algunos casos se ajustan autom√°ticamente, pero en otros debemos asignarlos manualmente o colocarlos porcentualmente (relativo al tama√±o del dispositivo del cliente).

Atributo: Position
El navegador es el responsable de asignar posiciones a todos los elementos de una p√°gina, pero, como ya sabemos, las posiciones que traen los elementos son bastante limitadas y hacen que los documentos se vean feos y anticuados.

Para que un sitio web se vea como los sitios web de la actualidad, tenemos que redise√±ar todo el posicionamiento de la p√°gina. Esto se logra utilizando la propiedad "position" y "display" (que veremos m√°s adelante) para poder replicar la diagramaci√≥n que se le ocurra al m√°s √°vido dise√±ador.


Click aqui para abrir demo en una nueva ventana
Nombre	Descripci√≥n
Static	No provoca ning√∫n posicionamiento especial de los elementos y por tanto, los atributos top, left, right y bottom no se tendr√°n en cuenta.
Relative	Similar a absolute. La principal diferencia es que nadie ignora su posici√≥n en el documento. La caja a la que le apliques este atributo se va a ubicar con base en los atributos top, left, right y bottom, pero bas√°ndose en su elemento padre (el elemento donde el est√© contenido) como punto de partida.
Absolute	Cuando le dices a una caja que su posici√≥n es absolute, igualmente debes definir las reglas top, bottom, left y right. Aqu√≠ le est√°s pidiendo a la caja que ignore d√≥nde se encuentra dentro del documento. Su nueva posici√≥n estar√° basada en las reglas (top, left, right y bottom que especificaste en el CSS).
Fixed	Se utiliza cuando queremos que un elemento permanezca en la misma posici√≥n durante toda la navegaci√≥n del usuario dentro en la p√°gina. Si haces scroll ver√°s como ‚Äúte acompa√±a‚Äù. Fixed se puede utilizar para las ventanas modales (PopUps), para los men√∫ de navegaci√≥n, etc.
Espera!! Si no entendiste bien lo que acabamos de decir, bueno‚Ä¶‚Ä¶realmente no importa (en este punto). Este es uno de esos momentos donde necesitamos que practiques para entenderlo. No hay otra opci√≥n. üôÅ

Atributo: Display
Las posibilidades de la propiedad displayson mucho m√°s avanzadas que simplemente ocultar elementos. En realidad, la propiedad displaymodifica la forma en la que se visualizan.

Son muy utilizadas para listar elementos, para los men√∫s de navegaci√≥n, para los activity feeds de las redes sociales, etc.


Nombre	Descripci√≥n
Inline	Es el valor por defecto de <strong>, <i>, <a>, <span>, etc. Los elementos se comportar√°n como un texto y no tendr√°n l√≠mites r√≠gidos (ni width, ni heigh).
Block	Es el valor por defecto que tienen los <div>, <p>, <h>, etc. El elemento ocupar√° toda la l√≠nea de la p√°gina desplazando a los dem√°s elementos por encima o por debajo de √©l.
Inline-Block	Lo mejor de dos mundos. Sirve para tratar de tener varios contenedores en una misma l√≠nea pero cada uno respetando sus l√≠mites (width y heigh). Gracias a √©l existen p√°ginas como Pinterest que permiten ver el dise√±o masonery.
None	Hace que el elemento se oculte (invisible) y no ocupe ning√∫n espacio dentro del documento.
Para entender display perfectamente lo mejor es‚Ä¶ ¬°ponernos a practicar!.

Atributo: Float
Es un atributo sencillo pero muy √∫til. Sirve para decirle a una caja que se desplace lo m√°ximo posible hacia alg√∫n lado: izquierda o derecha. Una vez que le asignes la propiedad float a alg√∫n elemento, este buscar√° el mejor espacio para acomodarse, intentando convivir con los elementos que lo rodean.

Es muy utilizado en blogs cuando quieres agregar im√°genes a tus art√≠culos. Es muy bueno en estos casos, porque una vez que la foto se desplaza hacia un lado, el texto del art√≠culo rodea a la imagen de una manera muy natural.



Nombre	Descripci√≥n
left	Desplaza el elemento lo m√°s a la izquierda posible.
right	Desplaza el elemento lo m√°s a la derecha posible.
Pensemos en UI/UX por un momento
